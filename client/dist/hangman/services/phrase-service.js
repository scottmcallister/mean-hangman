"use strict";var __decorate=this&&this.__decorate||function(e,t,r,a){var o,n=arguments.length,c=n<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,r,a);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(c=(n<3?o(c):n>3?o(t,r,c):o(t,r))||c);return n>3&&c&&Object.defineProperty(t,r,c),c},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=require("@angular/core"),http_1=require("@angular/http"),PhraseService=function(){function e(e){this.http=e}return e.prototype.getRandom=function(){return this.http.get(e.ENDPOINT).toPromise().then(this.extractPhrase)["catch"](this.handleError)},e.prototype.extractPhrase=function(e){var t=e.json();return JSON.stringify(t.phrase)},e.prototype.handleError=function(e){var t=e.message?e.message:e.status?e.status+" - "+e.statusText:"Server error";return console.error(t),Promise.reject(t)},e.ENDPOINT="/api/phrases/random",e=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[http_1.Http])],e)}();exports.PhraseService=PhraseService;